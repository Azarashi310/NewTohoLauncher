//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewTHL2.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NewTHL2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   [HASH]
        ///alcostg =  b31eb1628c8478b24a1b628a4f1ebc11
        ///th06 =  fa3d64768b1bfc50703dedc2db92f7fa
        ///th07 =  0126afce1e805370d36c3482445e98da
        ///th075 =  21bcb855a39f2170195811e6ad292f18
        ///th08 =  77b6785e04a3406e50be68714a193650
        ///th09 =  8bc284d591e247cb62fe62a710ac1689_cf634df46e05552e104fa97a971aaac0
        ///th095 =  8de95bc7651419201fc1a4ea49bc0697
        ///th10 =  7dc488d82c81dd4aee4ba098b8804d83
        ///th105 =  2ae711a6c92c4addbdbf526bc61d8e59
        ///th11 =  6af1e3b37f28293f4fc127ee01d2632c
        ///th12 =  212f187591f4f1fa99eb2845d1b3cf20
        ///th1 [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string hash {
            get {
                return ResourceManager.GetString("hash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap me {
            get {
                object obj = ResourceManager.GetObject("me", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap PBG {
            get {
                object obj = ResourceManager.GetObject("PBG", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   [FilePath]
        ///th06 =
        ///th07 =
        ///th075 =
        ///th08 =
        ///th09 =
        ///th095 =
        ///th10 =
        ///th105 =
        ///th11 =
        ///th12 =
        ///th123 =
        ///th125 =
        ///th128 =
        ///th13 =
        ///th135 =
        ///th14 =
        ///th143 =
        ///th145 =
        ///th15 =
        ///th16 =
        ///alcostg =
        ///[VsyncSwitch]
        ///th06_V =
        ///th07_V =
        ///th08_V =
        ///th09_V =
        ///th095_V =
        ///th10_V =
        ///th11_V =
        ///th12_V =
        ///th125_V =
        ///th128_V =
        ///th13_V =
        ///alcostg_V =
        ///[BG]
        ///th06_BG =
        ///th07_BG =
        ///th075_BG =
        ///th08_BG =
        ///th09_BG =
        ///th095_BG =
        ///th10_BG =
        ///th105_BG =
        ///th11_BG =
        ///th12_BG =
        ///th123_BG =
        ///th125_BG =
        ///th128_BG =
        ///th13_BG =
        ///th135_BG =
        ///t [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string setteingTemplate {
            get {
                return ResourceManager.GetString("setteingTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap spana {
            get {
                object obj = ResourceManager.GetObject("spana", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap spana_32 {
            get {
                object obj = ResourceManager.GetObject("spana_32", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap spana_click {
            get {
                object obj = ResourceManager.GetObject("spana_click", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   [Window]
        ///AskWindowMode =  0
        ///enabled =  1
        ///X =  0
        ///Y =  0
        ///Width =  1280
        ///Height =  728
        ///TitleBar =  0
        ///AlwaysOnTop =  0
        ///
        ///[Option]
        ///Vsync =  0
        ///SleepType =  1
        ///BltPrepareTime =  -1
        ///AutoBltPrepareTime =  1
        ///AllowShortDelay =  0
        ///GameFPS =  60
        ///ReplaySkipFPS =  200
        ///ReplaySlowFPS =  30
        ///CalcFPS =  1
        ///BugFixGetDeviceState =  0
        ///BugFixCherry =  0
        ///BugFixTh10Power3 = 0
        ///BugFixTh12Shadow =  0
        ///DisableChecksum =  0
        ///AlwaysBlt =  1
        ///ProcessPriority =  0
        ///ProcessAffinityMask =  0
        ///LockBackBuffer =  0
        ///D3DMultiTh [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string vpatch_All {
            get {
                return ResourceManager.GetString("vpatch_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [Window]
        ///AskWindowMode = none 0
        ///enabled = none 1
        ///X = none 0
        ///Y = none 0
        ///Width = none 1024
        ///Height = none 768
        ///TitleBar = none 1
        ///AlwaysOnTop = none 1
        ///
        ///[Option]
        ///Vsync = none 0
        ///SleepType = none 1
        ///BltPrepareTime = none 0
        ///AutoBltPrepareTime = none -1
        ///AllowShortDelay = none 0
        ///GameFPS = none 60
        ///ReplaySkipFPS = none 200
        ///ReplaySlowFPS = none 30
        ///CalcFPS = none 1
        ///AlwaysBlt = none 0
        ///BugFixGetDeviceState = none 0
        ///BugFixCherry = none 0
        ///BugFixTh10Power3 = none0
        ///BugFixTh12Shadow = none 0
        ///ProcessPriori [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string vpatch_th06_th11 {
            get {
                return ResourceManager.GetString("vpatch_th06_th11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [Window]
        ///AskWindowMode = none 0
        ///enabled = none 0
        ///X = none 0
        ///Y = none 0
        ///Width = none 640
        ///Height = none 480
        ///TitleBar = none 0
        ///AlwaysOnTop = none 0
        ///
        ///[Option]
        ///Vsync = none 0
        ///SleepType = none 1
        ///BltPrepareTime = none 4
        ///AutoBltPrepareTime = none 1
        ///AllowShortDelay = none 0
        ///GameFPS = none 60
        ///ReplaySkipFPS = none 240
        ///ReplaySlowFPS = none 30
        ///AlwaysBlt = none 0
        ///CalcFPS = none 1
        ///BugFixTh12Shadow = none 0
        ///ProcessPriority = none 0
        ///ProcessAffinityMask = none 0
        ///LockBackBuffer = none 0
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string vpatch_th12 {
            get {
                return ResourceManager.GetString("vpatch_th12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [Window]
        ///AskWindowMode = none 0
        ///enabled = none 1
        ///X = none 0
        ///Y = none 0
        ///Width = none 1024
        ///Height = none 768
        ///TitleBar = none 1
        ///AlwaysOnTop = none 1
        ///
        ///[Option]
        ///Vsync = none 0
        ///SleepType = none 1
        ///BltPrepareTime = none 0
        ///AutoBltPrepareTime = none -1
        ///AllowShortDelay = none 0
        ///GameFPS = none 60
        ///ReplaySkipFPS = none 200
        ///ReplaySlowFPS = none 30
        ///CalcFPS = none 1
        ///AlwaysBlt = none 0
        ///BugFixGetDeviceState = none 0
        ///ProcessPriority = none 0
        ///ProcessAffinityMask = none 0
        ///LockBackBuffer = none 0
        ///D3DMulti [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string vpatch_th125 {
            get {
                return ResourceManager.GetString("vpatch_th125", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [Window]
        ///AskWindowMode = none 0
        ///enabled = none 1
        ///X = none 0
        ///Y = none 0
        ///Width = none 1280
        ///Height = none 728
        ///TitleBar = none 0
        ///AlwaysOnTop = none 0
        ///
        ///[Option]
        ///Vsync = none 0
        ///SleepType = none 1
        ///BltPrepareTime = none -1
        ///AutoBltPrepareTime = none 1
        ///AllowShortDelay = none 0
        ///GameFPS = none 60
        ///ReplaySkipFPS = none 200
        ///ReplaySlowFPS = none 30
        ///CalcFPS = none 1
        ///AllowShortDelay = none 0
        ///AlwaysBlt = none 1
        ///ProcessPriority = none 0
        ///ProcessAffinityMask = none 0
        ///LockBackBuffer = none 0
        ///D3DMultiThrea [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string vpatch_th13 {
            get {
                return ResourceManager.GetString("vpatch_th13", resourceCulture);
            }
        }
    }
}
