<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>13, 9</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>13, 9</value>
  </metadata>
  <data name="G4_HardwareAssistLv2.ToolTip" xml:space="preserve">
    <value>ハードウェアの支援を使用して垂直同期を行います。フルスクリーン時のみ有効です。
　ハードウェアの支援を使用しているため、完璧な垂直同期が可能です。
　この設定では、ゲームループにwaitを入れずに全力で回すようにします。
　フレームレートは、ハードウェア側(ドライバ)の実装に依存します。
　この設定は、Vsyncのすべての設定の中で最もフレームレートが高くなると思われる設定です。
　ただし同時に、Vsyncのすべての設定の中で最も入力遅延が多い設定です。
　ウィンドウモード時の場合にこの設定を指定した場合や、
フルスクリーン時にハードウェアの支援が利用できない場合は、
　強制的に Vpatch独自の描画形式 の設定で動作します。</value>
  </data>
  <data name="G4_HardwareAssistLv1.ToolTip" xml:space="preserve">
    <value>ハードウェアの支援を使用して垂直同期を行います。フルスクリーン時のみ有効です。
　ハードウェアの支援を使用しているため、完璧な垂直同期が可能です。
この設定では、2フレーム以上の遅延が起きないように、タイミングを調節しつつ描画します。
　そのため、フレームレートが異様に低くなるシーンがあるかもしれませんが
ハードウェア補助レベル２よりも入力遅延は少ないです。
ウィンドウモード時の場合にハードウェア補助レベル１を指定した場合や、
フルスクリーン時にハードウェアの支援が利用できない場合は、
　強制的に Vpatch独自の描画形式 の設定で動作します。</value>
  </data>
  <data name="G4_MonitorRefreshLate.ToolTip" xml:space="preserve">
    <value>独自の方法でソフトウェア的に垂直同期を取り、描画を行います。
　ハードウェア的に行う垂直同期よりも低入力遅延で操作が可能です。
　フレームレートは、モニタのリフレッシュレートと同じになります。
ティアリング(ちらつき)が発生する場合は、
Vsyncが正常に動作しない場合　にチェックボックスをオンにするのと
Direct3Dをマルチスレッドで動かす にチェックボックスをオンにするのと
プロセス優先度 を　高　に設定してみてください。</value>
  </data>
  <data name="G1_UnderDrawing.ToolTip" xml:space="preserve">
    <value>走査線が画面の中央に来たときに描画を行います
　Gameの速度(fps)は、リフレッシュレートと同じになります
　必ず画面の中央付近でティアリングが起こるようになりますが、
　Vsync=1の時と比べて、画面の下半分の領域の描画遅延が8ms程度少なくなります(60Hz時)
　主に画面下でキャラを操作する人向きです
　※画面上半分は8ms～16ms程度の描画遅延が起こります
   ※液晶モニタの場合は、Vsync=0でご使用ください
　※VGAデバイスが走査線の読み取りをサポートしていない場合は、
　   Vsync機能は自動的にOFFになります</value>
  </data>
  <data name="G1_VsyncFPS.ToolTip" xml:space="preserve">
    <value>垂直同期を取りつつ、GameFPSに設定されたfpsで描画を行います
　リフレッシュレートが60Hz以外でも60fps(GameFPS)に近いレートで描画が可能ですが、
　均等なレートで画面が更新できないため、弾の移動等が滑らかに描画できない可能性があります
　※CalcFPS=0にしている場合は、fps表示が不安定になることがあります(59fps～61fps辺りをふらつく)
　※CalcFPS=1の場合でも、多少不安定になることがありますが、四捨五入時には60fpsになると思います</value>
  </data>
</root>